{"version":3,"sources":["ethereum.js","App.js","index.js"],"names":["getBlockchain","Promise","resolve","reject","a","detectEthereumProvider","provider","request","method","ethers","providers","Web3Provider","signer","getSigner","nft","Contract","NFT","abi","App","useState","undefined","setNFT","data","setData","counter","setcounter","useEffect","init","updateData","e","preventDefault","target","elements","value","mint","tx","wait","txdata","console","log","link","to","className","onSubmit","type","placeholder","rel","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wgw/BAuBeA,EAnBO,kBACpB,IAAIC,QAAJ,uCAAa,WAAOC,EAASC,GAAhB,mBAAAC,EAAA,sEACUC,MADV,YACPC,EADO,yCAGHA,EAASC,QAAQ,CAAEC,OAAQ,wBAHxB,cAKTF,EAAW,IAAIG,IAAOC,UAAUC,aAAaL,GACvCM,EAASN,EAASO,YAClBC,EAAM,IAAIC,IACd,6CACAC,EAAIC,IACJL,GAEFV,EAAQ,CAACY,QAZA,2BAeXX,EAAO,oBAfI,4CAAb,0D,QC+Dae,MAjEf,WAAgB,IAAD,EACSC,wBAASC,GADlB,mBACNN,EADM,KACDO,EADC,OAEWF,mBAAS,aAFpB,mBAENG,EAFM,KAEAC,EAFA,OAGiBJ,mBAAS,GAH1B,mBAGNK,EAHM,KAGGC,EAHH,KAKbC,qBAAU,YACE,uCAAG,8BAAAtB,EAAA,sEACWJ,IADX,gBACHc,EADG,EACHA,IACPO,EAAOP,GAFG,2CAAH,qDAKVa,KACC,IAEH,IAAMC,EAAU,uCAAG,WAAMC,GAAN,qBAAAzB,EAAA,6DACjByB,EAAEC,iBACIR,EAAOO,EAAEE,OAAOC,SAAS,GAAGC,MAFjB,SAGAnB,EAAIoB,KAAKZ,GAHT,cAGXa,EAHW,gBAIIA,EAAGC,OAJP,OAIXC,EAJW,OAKjBC,QAAQC,IAAIF,GACNG,EAAOH,EAAOI,GACpBhB,EAAYD,EAAU,GACtBc,QAAQC,IAAIf,GAEZD,EAAQiB,GAVS,4CAAH,sDAchB,MACiB,qBAAR1B,EACA,0BAIP,qBAAK4B,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACA,sBAAKA,UAAU,WAAf,UACI,sCACA,uBAAMA,UAAU,cAAcC,SAAU,SAAAd,GAAC,OAAID,EAAWC,IAAxD,UACE,uBACEe,KAAK,OACLF,UAAU,eACVG,YAAY,YAEd,wBACED,KAAK,SACLF,UAAU,kBAFZ,wBAQN,sBAAKA,UAAU,WAAf,UACI,gDAAmBlB,EAAnB,kBACA,mBAAGO,OAAO,SAASe,IAAI,sBAAsBC,KAAI,6CAAwCzB,EAAxC,YAAgDE,GAAjG,iDCpDVwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.82656edf.chunk.js","sourcesContent":["import detectEthereumProvider from '@metamask/detect-provider';\nimport { ethers, Contract } from 'ethers';\nimport NFT from './contracts/NFT.json';\n\nconst getBlockchain = () =>\n  new Promise( async (resolve, reject) => {\n    let provider = await detectEthereumProvider();\n    if(provider) {\n      await provider.request({ method: 'eth_requestAccounts' });\n      // const networkId = await provider.request({ method: 'net_version' })\n      provider = new ethers.providers.Web3Provider(provider);\n      const signer = provider.getSigner();\n      const nft = new Contract(\n        '0xB36D9B3B22efD6A874Fb8d532891a778147D95eA',\n        NFT.abi,\n        signer\n      );\n      resolve({nft});\n      return;\n    }\n    reject('Install Metamask');\n  });\n\nexport default getBlockchain;\n","import React, { useState, useEffect } from 'react';\nimport getBlockchain from './ethereum.js';\n\nfunction App() {\n  const [nft, setNFT] = useState(undefined);\n  const [data, setData] = useState('undefined');\n  const [counter, setcounter] = useState(0);\n\n  useEffect(() => {\n    const init = async () => {\n      const { nft } = await getBlockchain();\n       setNFT(nft);\n   \n    };\n    init();\n  }, []);\n\n  const updateData = async e => {\n    e.preventDefault();\n    const data = e.target.elements[0].value;\n    const tx = await nft.mint(data);\n    const txdata = await tx.wait();\n    console.log(txdata)\n    const link = txdata.to\n    setcounter (counter + 1)\n    console.log(counter)\n    \n    setData(link);\n\n  };\n\n  if(\n    typeof nft === 'undefined' ) {\n    return 'Connect your wallet ...';\n  }\n\n  return (\n    <div className='container'>\n      <div className='row'>\n      <div className='col-sm-6'>\n          <h2>Mint</h2>\n          <form className=\"form-inline\" onSubmit={e => updateData(e)}>\n            <input \n              type=\"text\" \n              className=\"form-control\" \n              placeholder=\"Address\"\n            />\n            <button \n              type=\"submit\" \n              className=\"btn btn-primary\"\n            >\n              Send\n            </button>\n          </form>\n        </div>\n      <div className='col-sm-6'>\n          <h2>Monkey number {counter} was minted </h2>  \n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://testnets.opensea.io/assets/${data}/${counter}`}>click to see it on opensea</a>\n        </div>\n       \n\n        \n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}